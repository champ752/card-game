version: '3'

services:
  app:
    build:
      context: card_game/
    restart: on-failure
    ports:
      - "8000:8000"
    networks:
      - elastic
    environment:
      DB_CONNECTION: "postgresql://postgres:postgres@db/postgres"
      REDIS_URL: "redis://@redis"
      APM_SERVER_URL: "http://apm-server:8200"
    env_file:
      - ./card_game/.env
    depends_on:
      - db
  db:
    image: postgres:11.5-alpine
    networks:
      - elastic
    ports:
      - "5445:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data:cached
  redis:
    networks:
      - elastic
    image: "redis:alpine"
    ports:
      - "6379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    networks:
      - elastic
    environment:
      - "cluster.routing.allocation.disk.threshold_enabled=false"
      - "discovery.type=single-node"
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - 9200:9200
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9200']
      interval: 10s
      timeout: 5s
      retries: 3

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.11.0
    networks:
      - elastic
    ports:
      - 8200:8200
    environment:
      - output.elasticsearch.hosts=['http://elasticsearch:9200']
      - apm-server.host="0.0.0.0:8200"
      - apm-server.secret_token="xxVpmQB2HMzCL9PgBHVrnxjNXXw5J7bd79DFm6sjBJR5HPXDhcF8MSb3vv4bpg44"
      - setup.kibana.host="kib01:5601"
      - setup.template.enabled=true
      - logging.to_files=false


  kib01:
    image: docker.elastic.co/kibana/kibana:7.11.0
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    networks:
      - elastic

volumes:
  elasticsearch-data:
    driver: local

networks:
  elastic:
    driver: bridge
